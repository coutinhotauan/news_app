// Mocks generated by Mockito 5.4.4 from annotations
// in news_app/test/features/search_news/data/repositories/news_search_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/features/search_news/data/datasources/news_search_datasource.dart'
    as _i3;
import 'package:news_app/features/search_news/domain/entities/news_search.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNewsSearch_0 extends _i1.SmartFake implements _i2.NewsSearch {
  _FakeNewsSearch_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsSearchDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsSearchDataSource extends _i1.Mock
    implements _i3.NewsSearchDataSource {
  MockNewsSearchDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.NewsSearch> getNews(String? keyword) => (super.noSuchMethod(
        Invocation.method(
          #getNews,
          [keyword],
        ),
        returnValue: _i4.Future<_i2.NewsSearch>.value(_FakeNewsSearch_0(
          this,
          Invocation.method(
            #getNews,
            [keyword],
          ),
        )),
      ) as _i4.Future<_i2.NewsSearch>);
}
